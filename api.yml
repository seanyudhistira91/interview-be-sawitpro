# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /registration:
    post:
      summary: This is registration endpoint.
      operationId: registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationParam' 

      responses:
        '201':
          description: Registration return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegistrationResponse"
        '400':
          description: Bad Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrationErrorResponse"
  /login:
    post:
      summary: This is login endpoint.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParam' 

      responses:
        '200':
          description: Login return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginErrorResponse"
  /my-profile:
    get:
      summary: This is my profile endpoint.
      operationId: myProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: My Profile return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MyProfileResponse"
        '403':
          description: Forbidden code. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfileErrorResponse"
  /update-profile:
    patch:
      summary: This is update profile endpoint.
      operationId: updateProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileParam' 
      
      responses:
        '200':
          description: Update Profile return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        '403':
          description: Forbidden code. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileErrorResponse"
        '409':
          description: Conflict Data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileErrorResponse"
                
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # Registration
    RegistrationParam:
      type: object
      properties:
        phoneNumber:
          type: string
          minLength: 3
          maxLength: 13
          example: "+62822333222"
        fullName:
          type: string
          minLength: 3
          maxLength: 60
          example: Arthur Dent
        password:
          type: string
          minLength: 3
          maxLength: 60
          example: my@Password1
      # Both properties are required
      required:  
        - phoneNumber
        - fullName
        - password
    RegistrationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    RegistrationErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    # Login
    LoginParam:
      type: object
      properties:
        phoneNumber:
          type: string
          example: "+62822333222"
        password:
          type: string
          example: my@Password1
      # Both properties are required
      required:  
        - phoneNumber
        - password
    LoginResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          type: integer
        token:
          type: string
    LoginErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    # My Profile
    MyProfileResponse:
      type: object
      required:
        - name
        - phoneNumber
      properties:
        name:
          type: string
        phoneNumber:
          type: string
    MyProfileErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    # Update Profile
    UpdateProfileParam:
      type: object
      properties:
        phoneNumber:
          type: string
          example: "+62822333222"
        fullName:
          type: string
          example: MyFullName
    UpdateProfileResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    UpdateProfileErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    

    


